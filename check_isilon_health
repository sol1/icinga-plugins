#!/bin/bash

HOST=$1
FUNCTION=$2
# plugin to check the various isilon health parameters

usage () {
	echo "This plugin is for checking the health of the isilon nodes over ssh.
	First argument is the node, second is the function from one of these:
	check_cluster_health
	check_inodes_level
	check_devices
	check_uptime
	EG: /usr/local/bin/check_isilon 10.23.241.100 check_devices"
	exit 3
}

check_version () {
timeout 15 ssh root@$HOST isi version |cut -f2 -d'v'|cut -f1 -d '.'
}

check_cluster_health () {
timeout 15 ssh root@$HOST isi status |grep "Cluster Health:" |grep -q OK
CLUSTERHEALTH=$?
if [ "$CLUSTERHEALTH" == "0" ]
	then echo "OK: $HOST reports Cluster Health is OK"
		exit 0
	else echo "CRITICAL: $HOST reports Cluster Health is NOT OK!"
		exit 2
fi
}

check_inodes_level () {
STATUS=UNKNOWN
timeout 15 ssh -o StrictHostKeyChecking=False root@$HOST df -i |grep -v ^devfs|grep -v uzip|grep -v ^Filesystem> /tmp/df-i

NUMFILESYSTEMS=`cat /tmp/df-i |wc -l`
LINE=1
until [ $LINE -eq $NUMFILESYSTEMS ]
do INODEPERCENT=`cat /tmp/df-i|head -$LINE|tail -1|awk '{print $8}'`
	FILESYSTEM=`cat /tmp/df-i|head -$LINE|tail -1|awk '{print $1}'`
	INODENUM=`echo $INODEPERCENT|tr -d %`

	if [ $INODENUM -gt 90 ]; then
		echo "CRITICAL: Inode percentage of $INODEPERCENT on $FILESYSTEM"
	exit 2
	else 
		echo "OK: Inode usage levels look OK of $INODEPERCENT on $FILESYSTEM"
		STATUS=OK
	fi

        LINE=$[$LINE+1]
done
case  $STATUS in
	OK)
	exit 0
	;;
	*)
	echo "UNKNOWN: couldn't get inode usage"
	exit 3
	;;
esac

}

check_devices () {
#sh root@$HOST isi devices 
	if [ `check_version` == "7" ]
		then
		UNHEALTHYDEVICES=`timeout 15 ssh root@$HOST isi devices|grep -v HEALTHY|grep -v OK|wc -l`
		NUMDEVICES=`timeout 15 ssh root@$HOST isi devices|grep -v OK|wc -l`

		if [ $UNHEALTHYDEVICES -gt 0 ]
			then echo "CRITICAL: Some devices are unhealthy"
			exit 2
			else echo "OK: All $NUMDEVICES devices are healthy"
			exit 0
		fi
		else
			UNHEALTHYDEVICES=`timeout 15 ssh root@$HOST isi devices drive list|grep Bay|grep -v L3|grep -v HEALTHY|grep -v OK|wc -l`
			NUMDEVICES=`timeout 15 ssh root@$HOST isi devices drive list|grep Bay|grep -v L3|grep -v OK|wc -l`

		if [ $UNHEALTHYDEVICES -gt 0 ]
			then echo "CRITICAL: Some devices are unhealthy"
			exit 2
		else echo "OK: All $NUMDEVICES devices are healthy"
			exit 0
		fi
	fi
}

check_closed_connections () {
	CONNCOUNT=`timeout 15 ssh root@$HOST netstat -an | grep 2049 | grep CLOSE | wc -l`
	if [ $CONNCOUNT -ge 80 ]
        then echo "CRITICAL: NFS Closed Connections ($CONNCOUNT) are more than 90 - you might need to restart the NFS process"
        exit 2
	else
		echo "OK: Closed NFS connections are less than 90 ($CONNCOUNT)"
	exit 0
fi
}

case $FUNCTION in
	check_cluster_health)
	check_cluster_health
	;;
	check_inodes_level)
	check_inodes_level
	;;
	check_devices)
	check_devices
	;;
	check_closed_connections)
	check_closed_connections
	;;
	*)
	usage
	;;
esac
